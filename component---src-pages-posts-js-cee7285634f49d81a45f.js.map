{"version":3,"sources":["webpack:///./src/pages/posts.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/elements/heading/index.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/header/index.js","webpack:///./src/components/aside/index.js","webpack:///./src/layout/index.js","webpack:///./src/elements/time/index.js","webpack:///./src/elements/paragraph/index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","postsQuery","gatsby_link__WEBPACK_IMPORTED_MODULE_0__","gatsby_link__WEBPACK_IMPORTED_MODULE_0___default","n","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","_layout__WEBPACK_IMPORTED_MODULE_2__","_elements_heading__WEBPACK_IMPORTED_MODULE_3__","_elements_paragraph__WEBPACK_IMPORTED_MODULE_4__","_elements_time__WEBPACK_IMPORTED_MODULE_5__","_ref","data","a","createElement","level","content","className","allMarkdownRemark","edges","map","_ref2","node","key","id","to","fields","slug","frontmatter","title","dateTime","date","excerpt","module","exports","m","default","preferDefault","require","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","Tag","concat","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","React","InternalPageRenderer","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default","json","propTypes","PropTypes","shape","string","isRequired","StaticQueryContext","createContext","StaticQuery","props","react_default","Consumer","staticQueryData","query","render","children","object","func","Header","subtitle","role","gatsby_link_default","activeClassName","aside","listItems","heading","Layout","_site$siteMetadata","site","siteMetadata","contact","postsListItems","contactListItems","_ref3","handle","icon","label","url","href","rel","target","data-icon","react","Helmet_default","dir","lang","name","header","_3628742260","prop_types__WEBPACK_IMPORTED_MODULE_1__","time"],"mappings":"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","file":"component---src-pages-posts-js-cee7285634f49d81a45f.js","sourcesContent":["/**\n * @file Posts.\n * @copyright Simon Finney 2019\n */\n\nimport { graphql } from 'gatsby';\nimport Link from 'gatsby-link';\nimport React from 'react';\n\nimport Layout from '../layout';\n\nimport Heading from '../elements/heading';\nimport Paragraph from '../elements/paragraph';\nimport Time from '../elements/time';\n\nexport default ({ data }) => (\n  <Layout>\n    <Heading level=\"1\" content=\"Posts\" />\n    <ul className=\"posts\">\n      {data.allMarkdownRemark.edges.map(({ node }) => (\n        <li key={node.id}>\n          <header>\n            <Link to={node.fields.slug}>\n              <Heading level=\"2\" content={node.frontmatter.title} />\n            </Link>\n            <Time dateTime={node.frontmatter.date} />\n          </header>\n          <Paragraph content={node.excerpt} />\n        </li>\n      ))}\n    </ul>\n  </Layout>\n);\n\nexport const postsQuery = graphql`\n  query PostsQuery {\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/blog/\" } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          id\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"D MMMM, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","/**\n * @file Heading.\n * @copyright Simon Finney 2019\n */\n\nimport React from 'react';\n\nexport default ({ content, level }) => {\n  const Tag = `h${level}`;\n  return <Tag>{content}</Tag>;\n};\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","/**\n * @file Header.\n * @copyright Simon Finney 2019\n */\n\nimport Link from 'gatsby-link';\nimport React from 'react';\n\nconst Header = ({ title, subtitle }) => (\n  <header className=\"header\" role=\"banner\">\n    <Link className=\"header__title\" to=\"/\">\n      {title}\n    </Link>\n    <span className=\"header__subtitle\">{subtitle}</span>\n    <nav role=\"navigation\">\n      <ul className=\"header__ul\">\n        <li className=\"header__li\">\n          <Link\n            activeClassName=\"header__a--active\"\n            className=\"header__a\"\n            to=\"/posts\"\n          >\n            Posts\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  </header>\n);\n\nexport default Header;\n","/**\n * @file Aside list.\n * @copyright Simon Finney 2019\n */\n\nimport React from 'react';\n\nimport Heading from '../../elements/heading';\n\nexport default ({ title, listItems }) => (\n  <section>\n    <Heading level=\"3\" content={title} />\n    <ol className=\"aside__list\">{listItems}</ol>\n  </section>\n);\n","/**\n * @file Layout.\n * @copyright Simon Finney 2019\n */\n\nimport { graphql, StaticQuery } from 'gatsby';\nimport Link from 'gatsby-link';\nimport Helmet from 'react-helmet';\nimport PropTypes from 'prop-types';\nimport React, { Fragment } from 'react';\n\nimport Header from '../components/header';\nimport Aside from '../components/aside';\n\nimport '../index.scss';\n\nconst query = graphql`\n  query DefaultQuery {\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/blog/\" } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"D MMMM, YYYY\")\n            description\n          }\n          id\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        subtitle\n        title\n        contact {\n          label\n          url\n          handle\n          icon\n        }\n      }\n    }\n  }\n`;\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={query}\n    render={data => {\n      const { allMarkdownRemark, site } = data;\n      const { contact, subtitle, title } = site.siteMetadata;\n\n      const postsListItems = allMarkdownRemark.edges.map(({ node }) => {\n        const { fields, frontmatter, id } = node;\n        const { date, title } = frontmatter;\n\n        return (\n          <li key={id}>\n            <Link to={fields.slug} title={date}>\n              {title}\n            </Link>\n          </li>\n        );\n      });\n\n      const contactListItems = contact.map(({ handle, icon, label, url }) => (\n        <li key={icon}>\n          <a\n            href={`${url}${handle}`}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n            data-icon={icon}\n          >\n            {label}\n          </a>\n        </li>\n      ));\n\n      return (\n        <Fragment>\n          <Helmet title={title}>\n            <html dir=\"ltr\" lang=\"en\" />\n            <meta name=\"description\" content=\"\" />\n          </Helmet>\n\n          <Header subtitle={subtitle} title={title} />\n          <main role=\"main\">{children}</main>\n          <aside>\n            <Aside title=\"Posts\" listItems={postsListItems} />\n            <Aside title=\"Contact\" listItems={contactListItems} />\n          </aside>\n        </Fragment>\n      );\n    }}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","/**\n * @file Time.\n * @copyright Simon Finney 2019\n */\n\nimport React from 'react';\nimport { string } from 'prop-types';\n\nconst time = ({ dateTime, label }) => <time dateTime={dateTime}>{label}</time>;\n\ntime.propTypes = {\n  dateTime: string.isRequired,\n  label: string.isRequired,\n};\n\nexport default time;\n","/**\n * @file Paragraph.\n * @copyright Simon Finney 2019\n */\n\nimport React from 'react';\n\nexport default ({ content }) => <p>{content}</p>;\n"],"sourceRoot":""}