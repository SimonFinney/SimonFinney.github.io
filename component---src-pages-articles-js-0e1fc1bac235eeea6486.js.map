{"version":3,"sources":["webpack:///./src/pages/articles.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/elements/heading/index.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/header/index.js","webpack:///./src/components/aside/index.js","webpack:///./src/layout/index.js","webpack:///./src/elements/time/index.js","webpack:///./src/elements/paragraph/index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","articlesQuery","gatsby_link__WEBPACK_IMPORTED_MODULE_0__","gatsby_link__WEBPACK_IMPORTED_MODULE_0___default","n","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","_layout__WEBPACK_IMPORTED_MODULE_2__","_elements_heading__WEBPACK_IMPORTED_MODULE_3__","_elements_paragraph__WEBPACK_IMPORTED_MODULE_4__","_elements_time__WEBPACK_IMPORTED_MODULE_5__","_ref","data","a","createElement","head","level","content","className","allMarkdownRemark","edges","map","_ref2","node","key","id","to","fields","slug","frontmatter","title","dateTime","date","excerpt","module","exports","m","default","preferDefault","require","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","Tag","concat","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","React","InternalPageRenderer","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default","json","propTypes","PropTypes","shape","string","isRequired","StaticQueryContext","createContext","StaticQuery","props","react_default","Consumer","staticQueryData","query","render","children","object","func","Header","subtitle","role","gatsby_link_default","activeClassName","aside","listItems","heading","Layout","_site$siteMetadata","site","siteMetadata","contact","description","articlesListItems","contactListItems","_ref3","href","icon","text","rel","target","data-icon","react","Helmet_default","dir","lang","name","header","_1338314828","defaultProps","prop_types__WEBPACK_IMPORTED_MODULE_0__","time"],"mappings":"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","file":"component---src-pages-articles-js-0e1fc1bac235eeea6486.js","sourcesContent":["/**\n * @file Articles.\n * @copyright Simon Finney 2019\n */\n\nimport { graphql } from 'gatsby';\nimport Link from 'gatsby-link';\nimport React from 'react';\n\nimport Layout from '../layout';\n\nimport Heading from '../elements/heading';\nimport Paragraph from '../elements/paragraph';\nimport Time from '../elements/time';\n\nconst title = 'Articles';\n\nexport default ({ data }) => (\n  <Layout head={title}>\n    <Heading level=\"1\" content={title} />\n    <ul className=\"articles\">\n      {data.allMarkdownRemark.edges.map(({ node }) => (\n        <li key={node.id}>\n          <header>\n            <Link to={node.fields.slug}>\n              <Heading level=\"2\" content={node.frontmatter.title} />\n            </Link>\n            <Time dateTime={node.frontmatter.date} />\n          </header>\n          <Paragraph content={node.excerpt} />\n        </li>\n      ))}\n    </ul>\n  </Layout>\n);\n\nexport const articlesQuery = graphql`\n  query ArticlesQuery {\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/articles/\" } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          id\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"D MMMM, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","/**\n * @file Heading.\n * @copyright Simon Finney 2019\n */\n\nimport React from 'react';\n\nexport default ({ content, level }) => {\n  const Tag = `h${level}`;\n  return <Tag>{content}</Tag>;\n};\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","/**\n * @file Header.\n * @copyright Simon Finney 2019\n */\n\nimport Link from 'gatsby-link';\nimport React from 'react';\n\nconst Header = ({ title, subtitle }) => (\n  <header className=\"header\" role=\"banner\">\n    <Link className=\"header__title\" to=\"/\">\n      {title}\n    </Link>\n    <span className=\"header__subtitle\">{subtitle}</span>\n    <nav role=\"navigation\">\n      <ul className=\"header__ul\">\n        <li className=\"header__li\">\n          <Link\n            activeClassName=\"header__a--active\"\n            className=\"header__a\"\n            to=\"/articles\"\n          >\n            Articles\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  </header>\n);\n\nexport default Header;\n","/**\n * @file Aside list.\n * @copyright Simon Finney 2019\n */\n\nimport React from 'react';\n\nimport Heading from '../../elements/heading';\n\nexport default ({ title, listItems }) => (\n  <section>\n    <Heading level=\"3\" content={title} />\n    <ol className=\"aside__list\">{listItems}</ol>\n  </section>\n);\n","/**\n * @file Layout.\n * @copyright Simon Finney 2019\n */\n\nimport { graphql, StaticQuery } from 'gatsby';\nimport Link from 'gatsby-link';\nimport { string } from 'prop-types';\nimport React, { Fragment } from 'react';\nimport Helmet from 'react-helmet';\n\nimport Header from '../components/header';\nimport Aside from '../components/aside';\n\nimport '../index.scss';\n\nconst query = graphql`\n  query DefaultQuery {\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/articles/\" } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"D MMMM, YYYY\")\n            description\n          }\n          id\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        description\n        subtitle\n        title\n        contact {\n          text\n          href\n          icon\n        }\n      }\n    }\n  }\n`;\n\nconst Layout = ({ children, head }) => (\n  <StaticQuery\n    query={query}\n    render={data => {\n      const { allMarkdownRemark, site } = data;\n      const { contact, description, subtitle, title } = site.siteMetadata;\n\n      const articlesListItems = allMarkdownRemark.edges.map(({ node }) => {\n        const { fields, frontmatter, id } = node;\n        const { date, title } = frontmatter;\n\n        return (\n          <li key={id}>\n            <Link to={fields.slug} title={date}>\n              {title}\n            </Link>\n          </li>\n        );\n      });\n\n      const contactListItems = contact.map(({ href, icon, text }) => (\n        <li key={icon}>\n          <a\n            href={href}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n            data-icon={icon}\n          >\n            {text}\n          </a>\n        </li>\n      ));\n\n      return (\n        <Fragment>\n          <Helmet title={head ? `${head} — ${title}` : description}>\n            <html dir=\"ltr\" lang=\"en\" />\n            <meta name=\"description\" content=\"\" />\n          </Helmet>\n\n          <Header subtitle={subtitle} title={title} />\n          <main role=\"main\">{children}</main>\n          <aside>\n            <Aside title=\"Articles\" listItems={articlesListItems} />\n            <Aside title=\"Contact\" listItems={contactListItems} />\n          </aside>\n        </Fragment>\n      );\n    }}\n  />\n);\n\nLayout.defaultProps = {\n  head: null,\n};\n\nLayout.propTypes = {\n  head: string,\n};\n\nexport default Layout;\n","/**\n * @file Time.\n * @copyright Simon Finney 2019\n */\n\nimport { string } from 'prop-types';\nimport React from 'react';\n\nconst time = ({ dateTime }) => <time dateTime={dateTime}>{dateTime}</time>;\n\ntime.propTypes = {\n  dateTime: string.isRequired,\n};\n\nexport default time;\n","/**\n * @file Paragraph.\n * @copyright Simon Finney 2019\n */\n\nimport React from 'react';\n\nexport default ({ content }) => <p>{content}</p>;\n"],"sourceRoot":""}