////
/// Colour definitions.
/// @copyright Simon Finney 2019 - 2020
////

/// Black.
/// @type Color
$colour__black: #161616;

/// Light blue.
/// @type Color
$colour__blue--light: #4589ff;

/// Blue.
/// @type Color
$colour__blue: #0f62fe;

/// Gray.
/// @type Color
$colour__gray: #262626;

/// Neutral white.
/// @type Color
$colour__neutral-white: #f4f4f4;

/// White.
/// @type Color
$colour__white: #fff;

/// Colours.
/// @type Map<Color>
$colours: (
  background: $colour__white,
  brand--primary: $colour__blue,
  brand--secondary: $colour__neutral-white,
  text: $colour__black,
);

/// Dark theme colours.
/// @type Map<Color>
$colours--dark: (
  background: $colour__black,
  brand--primary: $colour__blue--light,
  brand--secondary: $colour__gray,
  text: $colour__white,
);

/// Returns a CSS custom property declaration.
/// @param {String} $declaration - The declaration to return.
/// @returns {String} - The CSS custom property declaration.

@function css-custom-property-declaration-get($declaration) {
  @return --#{$declaration};
}

/// Returns a value from the colour map.
/// @param {String} $colour - The colour to return.
/// @returns {Color} - The colour from the colour map.

@function colour-get($colour) {
  @return var(
    css-custom-property-declaration-get($declaration: $colour),
    map-get($colours, $colour)
  );
}
